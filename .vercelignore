# Vercel Ignore File

# Node modules (Vercel handles node_modules caching and installation)
# node_modules/ # Usually not needed as Vercel handles it, but can be explicit
node_modules_linux/ # If you ever build locally on Linux for some reason

# Local environment files
.env
.env*.local
.env*.development
.env*.test
.env*.production
*.env

# Log files
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# OS-specific files
.DS_Store
Thumbs.db

# Build outputs (if any are committed by mistake)
.next/
out/
build/
dist/

# Local scripts and data not needed for Next.js runtime
# (Add any large files/directories here that are for local processing only)
*.js # Be careful with this, only top-level scripts
excel.py
*.md # If READMEs or extensive markdown docs are not part of the served app
# Example: If you have a folder with large raw documents for processing:
# raw_documents_for_processing/
# large_datasets/

# Python specific (if you have local python scripts)
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
env/
venv/
ENV/
VENV/
*.egg-info/
.installed.cfg
*.egg

# Specific large files or directories from your project root if they are not needed in production
# e.g. if 'alternative_process_documents.js' and similar are only for local dev
add-sample-chunks.js
alternative_process_documents.js
check-document-paths.js
check-supabase.js
create_document_entries.js
document-processing-package.json
excel_uploader_README.md
fix-env.js
fixed_process_documents.js
improved_process_documents.js
process_documents.js
process-bucket-documents.js
reprocess-documents.js
run.sh
setup-database.js
simple_process_documents.js
simplified_process_documents.js
test-storage-access.js
test-supabase.js
upload-sample-documents.js
